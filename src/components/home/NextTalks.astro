---
import { getImage } from "astro:assets";
import { getCollection } from "astro:content";
import Icon from "../Icon.astro";
import Grid from "../Grid.astro";
import CallToAction from "../CallToAction.astro";
import TalkPreview from "../TalkPreview.astro";

import noise from "../../../public/assets/backgrounds/noise.png";
const noiseBackground = `url("${(await getImage({ src: noise })).src}")`;

// Content Fetching: List four most recent talks
const talks = (await getCollection("talks"))
	.filter((a) => a.data.talkDate > new Date())
	.sort((a, b) => b.data.talkDate.valueOf() - a.data.talkDate.valueOf())
	.slice(0, 4);
---

{
	talks?.length > 0 && (
		<section class="section with-background with-cta">
			<header class="section-header stack gap-2 lg:gap-4">
				<h3>Next Talks</h3>
				<p>
					Take a look below at some of my next talks for events in the
					following months.
				</p>
			</header>

			<div class="gallery">
				<Grid variant="offset">
					{talks.map((talk) => (
						<li>
							<TalkPreview talk={talk} />
						</li>
					))}
				</Grid>
			</div>

			<div class="cta">
				<CallToAction href="/talks/">
					View All
					<Icon icon="arrow-right" size="1.2em" />
				</CallToAction>
			</div>
		</section>
	)
}

<style define:vars={{ noiseBackground }}>
	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: "";
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			var(--noiseBackground) top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: "header header header header" "gallery gallery gallery gallery";
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}
</style>
